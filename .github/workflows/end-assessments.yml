name: End Assessments Cron Job

on:
  workflow_dispatch:
#  schedule:
#    - cron: '*/5 * * * *'

jobs:
  end-assessments:
    runs-on: ubuntu-latest
    steps:
      - name: Scan and Delete Repositories
        run: |
          ORG_NAME=$(echo ${{ github.event.repository.full_name }} | cut -d '/' -f 1)
          REPO_NAME="${{ github.event.repository.name }}-" # DANGER: trailing dash is important
          
          scan_repos() {
            local url="https://api.github.com/orgs/$ORG_NAME/repos?per_page=100&page=$1"
            curl -H "Authorization: token ${{ secrets.BOT_SERVICE_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -I -s "$url" | grep -i '^link:' | sed -e 's/<//g' -e 's/>//g' | tr ',' '\n' | grep 'rel="next"' | sed -e 's/.*page=//g' -e 's/&.*//g' | sed -e 's/; rel=\"next\"//g'
          }
          
          check_endassessment() {
            local repo=$1
            endassessment_date=$(curl -H "Authorization: token ${{ secrets.BOT_SERVICE_TOKEN }}" -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" -s "https://api.github.com/repos/$ORG_NAME/$repo/contents/.endassessment" | jq -r '.content' | base64 --decode)
            if [[ $? -eq 0 && ! -z "$endassessment_date" ]]; then
              endassessment_date=$(date -d "$endassessment_date" +%s)
              current_date=$(date -u +"%s")
              if [[ "$current_date" -ge "$endassessment_date" ]]; then
                echo "true"
              else
                echo "false"
              fi
            else
              echo "false"
            fi
          }

          delete_repo() {
            local repo=$1
            curl -X DELETE -H "Authorization: token ${{ secrets.BOT_SERVICE_TOKEN }}" "https://api.github.com/repos/$ORG_NAME/$repo"
          }

          page=1
          while [[ $page -ne 0 ]]; do
            repos=$(curl -H "Authorization: token ${{ secrets.BOT_SERVICE_TOKEN }}" -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" -s "https://api.github.com/orgs/$ORG_NAME/repos?per_page=100&page=$page" | jq -r ".[].name" | grep "^$REPO_NAME")
            echo "repos: $repos"

            for r in $repos; do
              if [[ $(check_endassessment "$r") == "true" ]]; then
                delete_repo "$r"
                echo "Deleted repository: $r"
              fi
            done
          
            next_page=$(scan_repos $page)
            page=${next_page:-0}
          done
